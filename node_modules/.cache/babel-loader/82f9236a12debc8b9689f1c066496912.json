{"ast":null,"code":"var _jsxFileName = \"E:\\\\fork\\\\frontend-111406\\\\frontend-111406\\\\src\\\\common\\\\sheet\\\\MakeSheet.js\";\nimport React, { Component } from \"react\";\nimport { resolveTo } from \"react-router/lib/router\";\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DrawSheet extends Component {\n  render() {\n    const readExcel = file => {\n      const promise = new Promise((resolve, reject) => {\n        const fileReader = new FileReader();\n        fileReader.readAsArrayBuffer(file);\n\n        fileReader.onload = e => {\n          const bufferArray = e.target.result;\n          const wb = XLSX.read(bufferArray, {\n            type: 'buffer'\n          });\n          const wsname = wb.SheetNames[0];\n        };\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: file,\n        onChange: () => {\n          const file = e.target.files[0];\n          readExcel(file);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DrawSheet;","map":{"version":3,"names":["React","Component","resolveTo","XLSX","DrawSheet","render","readExcel","file","promise","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","e","bufferArray","target","result","wb","read","type","wsname","SheetNames","files"],"sources":["E:/fork/frontend-111406/frontend-111406/src/common/sheet/MakeSheet.js"],"sourcesContent":["import React,{Component} from \"react\";\r\nimport { resolveTo } from \"react-router/lib/router\";\r\nimport * as XLSX from 'xlsx'\r\nclass DrawSheet extends Component{\r\n\r\n    render(){\r\n        const readExcel=(file)=>{\r\n            const promise=new Promise((resolve,reject)=>{\r\n                const fileReader=new FileReader();\r\n                fileReader.readAsArrayBuffer(file)\r\n                fileReader.onload=(e)=>{\r\n                    const bufferArray=e.target.result;\r\n                    const wb=XLSX.read(bufferArray,{type:'buffer'});\r\n                    const wsname= wb.SheetNames[0];\r\n                };\r\n            });\r\n        };\r\n        return (\r\n            <div>\r\n                <input type={file} onChange={()=>{\r\n                    const file=e.target.files[0];\r\n                    readExcel(file)\r\n                }}>\r\n                </input>\r\n            </div>\r\n        )}}\r\nexport default DrawSheet;"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;;;AACA,MAAMC,SAAN,SAAwBH,SAAxB,CAAiC;EAE7BI,MAAM,GAAE;IACJ,MAAMC,SAAS,GAAEC,IAAD,IAAQ;MACpB,MAAMC,OAAO,GAAC,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;QACxC,MAAMC,UAAU,GAAC,IAAIC,UAAJ,EAAjB;QACAD,UAAU,CAACE,iBAAX,CAA6BP,IAA7B;;QACAK,UAAU,CAACG,MAAX,GAAmBC,CAAD,IAAK;UACnB,MAAMC,WAAW,GAACD,CAAC,CAACE,MAAF,CAASC,MAA3B;UACA,MAAMC,EAAE,GAACjB,IAAI,CAACkB,IAAL,CAAUJ,WAAV,EAAsB;YAACK,IAAI,EAAC;UAAN,CAAtB,CAAT;UACA,MAAMC,MAAM,GAAEH,EAAE,CAACI,UAAH,CAAc,CAAd,CAAd;QACH,CAJD;MAKH,CARa,CAAd;IASH,CAVD;;IAWA,oBACI;MAAA,uBACI;QAAO,IAAI,EAAEjB,IAAb;QAAmB,QAAQ,EAAE,MAAI;UAC7B,MAAMA,IAAI,GAACS,CAAC,CAACE,MAAF,CAASO,KAAT,CAAe,CAAf,CAAX;UACAnB,SAAS,CAACC,IAAD,CAAT;QACH;MAHD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAQE;;AAtBuB;;AAuBjC,eAAeH,SAAf"},"metadata":{},"sourceType":"module"}