{"ast":null,"code":"import _classCallCheck from \"E:\\\\fork\\\\frontend-111406\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\fork\\\\frontend-111406\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\fork\\\\frontend-111406\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\fork\\\\frontend-111406\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\fork\\\\frontend-111406\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\fork\\\\frontend-111406\\\\src\\\\new\\\\common\\\\dataDrawListTrainS\\\\index.js\";\n//訓練下肢個人\nimport React, { Component } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport faker from 'Faker';\nimport { Line } from 'react-chartjs-2';\nimport { Div0, DataDrawItem } from './sty';\nvar data = [{\n  name: 'SquatComplete',\n  value: 400\n}, {\n  name: 'SquatNoComplete',\n  value: 1000\n}];\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nvar options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    title: {\n      display: true,\n      text: 'Chart.js Line Chart'\n    }\n  }\n};\nvar labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\nvar data1 = {\n  labels: labels,\n  datasets: [{\n    label: 'Dataset 1',\n    data: labels.map(function () {\n      return faker.datatype.number({\n        min: -1000,\n        max: 1000\n      });\n    }),\n    borderColor: 'rgb(255, 99, 132)',\n    backgroundColor: 'rgba(255, 99, 132, 0.5)'\n  }, {\n    label: 'Dataset 2',\n    data: labels.map(function () {\n      return faker.datatype.number({\n        min: -1000,\n        max: 1000\n      });\n    }),\n    borderColor: 'rgb(53, 162, 235)',\n    backgroundColor: 'rgba(53, 162, 235, 0.5)'\n  }]\n};\n\nvar DataDrawListTrainS = /*#__PURE__*/function (_Component) {\n  _inherits(DataDrawListTrainS, _Component);\n\n  function DataDrawListTrainS() {\n    _classCallCheck(this, DataDrawListTrainS);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DataDrawListTrainS).apply(this, arguments));\n  }\n\n  _createClass(DataDrawListTrainS, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Div0, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(DataDrawItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Line, {\n        options: options,\n        data: data1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(DataDrawItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(DataDrawItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }));\n    }\n  }]);\n\n  return DataDrawListTrainS;\n}(Component);\n\nexport default DataDrawListTrainS;","map":{"version":3,"names":["React","Component","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","faker","Line","Div0","DataDrawItem","data","name","value","register","options","responsive","plugins","legend","position","title","display","text","labels","data1","datasets","label","map","datatype","number","min","max","borderColor","backgroundColor","DataDrawListTrainS"],"sources":["E:/fork/frontend-111406/src/new/common/dataDrawListTrainS/index.js"],"sourcesContent":["//訓練下肢個人\r\nimport React,{Component} from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport faker from 'Faker';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {Div0,DataDrawItem} from'./sty';\r\nconst data = [\r\n    { name: 'SquatComplete', value: 400 },\r\n    { name: 'SquatNoComplete', value: 1000 },\r\n\r\n  ];\r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Chart.js Line Chart',\r\n      },\r\n    },\r\n  };\r\n  const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n\r\n  const data1 = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      label: 'Dataset 1',\r\n      data: labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n      borderColor: 'rgb(255, 99, 132)',\r\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n    },\r\n    {\r\n      label: 'Dataset 2',\r\n      data: labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n      borderColor: 'rgb(53, 162, 235)',\r\n      backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n    },\r\n  ],\r\n};\r\nclass DataDrawListTrainS extends Component{\r\n    render(){\r\n        return (\r\n                <Div0>\r\n                    <DataDrawItem>\r\n                    <Line options={options} data={data1} />\r\n      </DataDrawItem>\r\n                    <DataDrawItem></DataDrawItem>\r\n                    <DataDrawItem></DataDrawItem>\r\n                </Div0>\r\n        )}}\r\nexport default DataDrawListTrainS;"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SACEC,KAAK,IAAIC,OADX,EAEEC,aAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,KANF,EAOEC,OAPF,EAQEC,MARF,QASO,UATP;AAUA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAAQC,IAAR,EAAaC,YAAb,QAA+B,OAA/B;AACA,IAAMC,IAAI,GAAG,CACT;EAAEC,IAAI,EAAE,eAAR;EAAyBC,KAAK,EAAE;AAAhC,CADS,EAET;EAAED,IAAI,EAAE,iBAAR;EAA2BC,KAAK,EAAE;AAAlC,CAFS,CAAb;AAKEd,OAAO,CAACe,QAAR,CACEd,aADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF;AASA,IAAMS,OAAO,GAAG;EACdC,UAAU,EAAE,IADE;EAEdC,OAAO,EAAE;IACPC,MAAM,EAAE;MACNC,QAAQ,EAAE;IADJ,CADD;IAIPC,KAAK,EAAE;MACLC,OAAO,EAAE,IADJ;MAELC,IAAI,EAAE;IAFD;EAJA;AAFK,CAAhB;AAYA,IAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CAAf;AAEA,IAAMC,KAAK,GAAG;EACdD,MAAM,EAANA,MADc;EAEdE,QAAQ,EAAE,CACR;IACEC,KAAK,EAAE,WADT;IAEEf,IAAI,EAAEY,MAAM,CAACI,GAAP,CAAW;MAAA,OAAMpB,KAAK,CAACqB,QAAN,CAAeC,MAAf,CAAsB;QAAEC,GAAG,EAAE,CAAC,IAAR;QAAcC,GAAG,EAAE;MAAnB,CAAtB,CAAN;IAAA,CAAX,CAFR;IAGEC,WAAW,EAAE,mBAHf;IAIEC,eAAe,EAAE;EAJnB,CADQ,EAOR;IACEP,KAAK,EAAE,WADT;IAEEf,IAAI,EAAEY,MAAM,CAACI,GAAP,CAAW;MAAA,OAAMpB,KAAK,CAACqB,QAAN,CAAeC,MAAf,CAAsB;QAAEC,GAAG,EAAE,CAAC,IAAR;QAAcC,GAAG,EAAE;MAAnB,CAAtB,CAAN;IAAA,CAAX,CAFR;IAGEC,WAAW,EAAE,mBAHf;IAIEC,eAAe,EAAE;EAJnB,CAPQ;AAFI,CAAd;;IAiBIC,kB;;;;;;;;;;;6BACM;MACJ,oBACQ,oBAAC,IAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACI,oBAAC,YAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACA,oBAAC,IAAD;QAAM,OAAO,EAAEnB,OAAf;QAAwB,IAAI,EAAES,KAA9B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADA,CADJ,eAII,oBAAC,YAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAJJ,eAKI,oBAAC,YAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EALJ,CADR;IAQE;;;;EAVuB3B,S;;AAWjC,eAAeqC,kBAAf"},"metadata":{},"sourceType":"module"}