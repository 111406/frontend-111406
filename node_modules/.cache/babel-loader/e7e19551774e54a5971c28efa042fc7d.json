{"ast":null,"code":"var _jsxFileName = \"E:\\\\fork\\\\frontend-111406\\\\src\\\\common\\\\main\\\\DataDraw\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { PureComponent, useState } from 'react';\nimport { Div0 } from './style.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data1 = [{\n  name: '-3s',\n  time: 12,\n  num: 0,\n  amt: 2400\n}, {\n  name: '-2s',\n  time: 16,\n  num: 107.5,\n  amt: 2210\n}, {\n  name: '-1s',\n  time: 19,\n  num: 787,\n  amt: 2290\n}, {\n  name: '0s',\n  time: 20,\n  num: 2500,\n  amt: 2000\n}, {\n  name: '1s',\n  time: 23,\n  num: 787,\n  amt: 2181\n}, {\n  name: '2s',\n  time: 26,\n  num: 107.5,\n  amt: 2500\n}, {\n  name: '3s',\n  time: 32,\n  num: 0,\n  amt: 2100\n}];\n\nconst DataDraw = () => {\n  _s();\n\n  const [data1, setData1] = useState({\n    labels: data1.map(data => data.name),\n    datasets: [{\n      label: \"User fA\",\n      data: data1.map(data => data.time)\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(Div0, {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: data1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataDraw, \"DdAGVYIbjakiy2tTQRFs22dPUYs=\");\n\n_c = DataDraw;\nexport default DataDraw;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataDraw\");","map":{"version":3,"names":["React","PureComponent","useState","Div0","Bar","data1","name","time","num","amt","DataDraw","setData1","labels","map","data","datasets","label"],"sources":["E:/fork/frontend-111406/src/common/main/DataDraw/index.js"],"sourcesContent":["import React, { PureComponent ,useState } from 'react';\r\nimport { Div0 } from './style.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst data1 = [\r\n{\r\n    name: '-3s',\r\n    time: 12,\r\n    num: 0,\r\n    amt: 2400,\r\n},\r\n{\r\n    name: '-2s',\r\n    time: 16,\r\n    num: 107.5,\r\n    amt: 2210,\r\n},\r\n{\r\n    name: '-1s',\r\n    time: 19,\r\n    num: 787,\r\n    amt: 2290,\r\n},\r\n{\r\n    name: '0s',\r\n    time: 20,\r\n    num: 2500,\r\n    amt: 2000,\r\n},\r\n{\r\n    name: '1s',\r\n    time: 23,\r\n    num: 787,\r\n    amt: 2181,\r\n},\r\n{\r\n    name: '2s',\r\n    time: 26,\r\n    num: 107.5,\r\n    amt: 2500,\r\n},\r\n{\r\n    name: '3s',\r\n    time: 32,\r\n    num: 0,\r\n    amt: 2100,\r\n},\r\n];\r\n\r\nconst DataDraw = () => {\r\n    const[data1,setData1]=useState({\r\n        labels:data1.map((data)=>data.name),\r\n        datasets:[{\r\n            label:\"User fA\",\r\n            data:data1.map((data)=>data.time)\r\n        }]\r\n    })\r\n    return (\r\n        <Div0>\r\n            <Bar data={data1}/>\r\n        </Div0>\r\n    );\r\n}\r\nexport default DataDraw;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,KAAK,GAAG,CACd;EACIC,IAAI,EAAE,KADV;EAEIC,IAAI,EAAE,EAFV;EAGIC,GAAG,EAAE,CAHT;EAIIC,GAAG,EAAE;AAJT,CADc,EAOd;EACIH,IAAI,EAAE,KADV;EAEIC,IAAI,EAAE,EAFV;EAGIC,GAAG,EAAE,KAHT;EAIIC,GAAG,EAAE;AAJT,CAPc,EAad;EACIH,IAAI,EAAE,KADV;EAEIC,IAAI,EAAE,EAFV;EAGIC,GAAG,EAAE,GAHT;EAIIC,GAAG,EAAE;AAJT,CAbc,EAmBd;EACIH,IAAI,EAAE,IADV;EAEIC,IAAI,EAAE,EAFV;EAGIC,GAAG,EAAE,IAHT;EAIIC,GAAG,EAAE;AAJT,CAnBc,EAyBd;EACIH,IAAI,EAAE,IADV;EAEIC,IAAI,EAAE,EAFV;EAGIC,GAAG,EAAE,GAHT;EAIIC,GAAG,EAAE;AAJT,CAzBc,EA+Bd;EACIH,IAAI,EAAE,IADV;EAEIC,IAAI,EAAE,EAFV;EAGIC,GAAG,EAAE,KAHT;EAIIC,GAAG,EAAE;AAJT,CA/Bc,EAqCd;EACIH,IAAI,EAAE,IADV;EAEIC,IAAI,EAAE,EAFV;EAGIC,GAAG,EAAE,CAHT;EAIIC,GAAG,EAAE;AAJT,CArCc,CAAd;;AA6CA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAK,CAACL,KAAD,EAAOM,QAAP,IAAiBT,QAAQ,CAAC;IAC3BU,MAAM,EAACP,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAQA,IAAI,CAACR,IAAvB,CADoB;IAE3BS,QAAQ,EAAC,CAAC;MACNC,KAAK,EAAC,SADA;MAENF,IAAI,EAACT,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAQA,IAAI,CAACP,IAAvB;IAFC,CAAD;EAFkB,CAAD,CAA9B;EAOA,oBACI,QAAC,IAAD;IAAA,uBACI,QAAC,GAAD;MAAK,IAAI,EAAEF;IAAX;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAbD;;GAAMK,Q;;KAAAA,Q;AAcN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}